name: Postman Test and Allure Report

on:
  push:
    branches:
      - main
  schedule:
    - cron: '30 18 * * 3' # Runs every Wednesday at 6:30 PM UTC
    - cron: '30 18 * * 5' # Runs every Friday at 6:30 PM UTC
    - cron: '0 20 * * 0'  # Runs every Sunday at 8:00 PM UTC

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Newman and Allure Reporter
        run: npm install -g newman newman-reporter-allure

      - name: Run Postman tests
        run: newman run assessment/assessment-apis.json --reporters cli,allure

      - name: Get Allure history
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: gh-pages
          path: gh-pages

      - name: Prepare Allure history
        run: |
          mkdir -p allure-history
          [ -d gh-pages ] && cp -r gh-pages/* allure-history/

      - name: Generate Allure report
        id: build
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Parse latest summary.json
        id: parse_results
        run: |
          latest_folder=$(find allure-history -mindepth 1 -maxdepth 1 -type d -name '[0-9]*' | sort -n | tail -n 1)
          latest_summary="allure-history/${latest_folder}/widgets/summary.json"
          if [ -f "$latest_summary" ]; then
            passed=$(jq -r '.statistic.passed' "$latest_summary")
            failed=$(jq -r '.statistic.failed' "$latest_summary")
            total=$((passed + failed))
            passing=$((total > 0 ? passed * 100 / total : 0))
            failing=$((total > 0 ? failed * 100 / total : 0))
            echo "::set-output name=passing::$passing"
            echo "::set-output name=failing::$failing"
          else
            echo "::set-output name=passing::0"
            echo "::set-output name=failing::0"
          fi
